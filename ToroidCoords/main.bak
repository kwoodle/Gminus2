/* 
 * File:   main.cpp
 * Author: kwoodle
 *
 * Created on October 17, 2015, 2:41 PM
 */

// Magnetic field magnitude B does not! satisfy Laplace's equation
// Expand in toroidial harmonics and solve boundary value problem
// pkg-config --cflags gsl broken
// gsl-config --cflags => -I/usr/include

//#include <cstdlib>
#include "Torr.h"
#include <cmath>
#include <vector>
//#include <numeric>
#include <string>
#include <iostream>
#include "Hyperg.h"
#include "Trolley.h"

using namespace Tor;
using std::string;
using std::cout;
using std::vector;
using std::endl;

int main(int argc, char** argv) {

	// Create Trolleyrun object using filename
	string filenm("/home/kim/NetBeansProjects/ToroidCoords/tail.dat");
//	string filenm("/home/kim/NetBeansProjects/ToroidCoords/tail.er");
	std::ifstream fs(filenm);
	if(!fs.is_open()){
		std::cerr << "Failed to open " << filenm << endl;
		exit(1);
	} 
	Trolley trl(fs);
	if (!trl.scan()) {
		std::cerr << "Failed to scan " << filenm << endl;
	}
	if (trl.nbads() > 0)
		trl.print_bads(cout);
	
	auto rit = trl.get_rowvec(18);
	if (rit != trl.end_rows())
		cout << "size 18 = " << rit->second.size() << endl;
	else
		cout << "no probe 18" << endl;
	 
	
	double sp = a / Probe::rp;
   double so = a / ro;
//   cout << "so = " << so << "  sp= " << sp << endl;

   Hypg hg;
   Dpair vo = hg(1, 2, 0.001);
   if (vo.first != GSL_NAN) {
//		cout << "val = " << vo.first << "  err = " << vo.second << endl;
	}
	vector<int> v(3); // vector with  ints.
	std::iota(std::begin(v), std::end(v), 0); // Fill with 0, 1, ...
	for (auto n : v) {
		Dpair out = hg(n, 2, 0.001);
		if (out.first != GSL_NAN){
//			cout << "n = " << n << "  val = " << out.first << "  err =" << out.second << endl;
		}
	}
/*
 * 	for (double i=0; i<12; i+=1.) {
		double ang = i*pi/6.;
		cout << "cos("<<i<<"*pi/6) = "<< cos(ang)
		<< "\t\t\tsin("<<i<<"*pi/6) = "<< sin(ang) << endl;
	}
	cout << "cos1 = " << pi;
*/
	return 0;
}